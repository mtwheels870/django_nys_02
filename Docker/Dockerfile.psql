# syntax=docker/dockerfile:1.0-experimental
# Use a Python base image
FROM postgres:16.9
ARG POSTGRES_USER=cb_admin
ARG POSTGRES_DB=pp_prod02
ARG POSTGRES_PASSWORD=overridden01
ARG POSTGRES_USER_PASSWORD=overridden02
ARG DB_VERSION=pp_prod02
ARG DB_DUMP=${DB_VERSION}.dump

WORKDIR /app

USER root

RUN apt-get update && apt-get install -y postgresql-16-postgis-3 && apt-get clean

# Add the user to Linux (etc/passwd)
# Already exists RUN useradd postgres

ARG INIT_SQL="/docker-entrypoint-initdb.d/init.sql"
RUN echo "MTW, PASSWORD: $POSTGRES_PASSWORD, ARG: $POSTGRES_DB"
RUN echo "CREATE USER postgres WITH SUPERUSER PASSWORD '$POSTGRES_PASSWORD';" > $INIT_SQL
RUN echo "CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;" >> $INIT_SQL
RUN echo "CREATE DATABASE ${POSTGRES_DB};" >> $INIT_SQL
RUN echo "CREATE USER cb_admin WITH encrypted PASSWORD '$POSTGRES_USER_PASSWORD';" >> $INIT_SQL
RUN echo "GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO cb_admin;" >> $INIT_SQL
#RUN cat $INIT_SQL
RUN chown postgres:postgres $INIT_SQL
RUN chmod 444 $INIT_SQL

# Create and set the working directory
# COPY $DB_DUMP ./docker-entrypoint-initdb.d/
COPY /Data/${DB_DUMP} .

ARG RESTORE_SCRIPT="/docker-entrypoint-initdb.d/restore_db.sh"
RUN echo "echo '$POSTGRES_PASSWORD' | pg_restore -U postgres -d ${POSTGRES_DB} $DB_DUMP" > $RESTORE_SCRIPT
RUN chown postgres:postgres $RESTORE_SCRIPT
RUN chmod 755 $RESTORE_SCRIPT

USER postgres

# Run postgres as that user
CMD ["postgres"]

